from flask import Flask, request, jsonify
from twilio.twiml.messaging_response import MessagingResponse
from twilio.rest import Client
import openai
import os

app = Flask(__name__)

# Configura√ß√£o do Twilio
ACCOUNT_SID = os.getenv("ACCOUNT_SID")
AUTH_TOKEN = os.getenv("AUTH_TOKEN")
TWILIO_WHATSAPP_NUMBER = "whatsapp:+14155238886"

twilio_client = Client(ACCOUNT_SID, AUTH_TOKEN)

# Configura√ß√£o da API OpenAI (ChatGPT)
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
openai.api_key = OPENAI_API_KEY

# Lista de palavras-chave para direcionamento ao suporte humano
PALAVRAS_CRITICAS = ["ruim", "p√©ssimo", "merda", "insatisfeito", "n√£o funciona", "horr√≠vel", "lento", "reclamar"]

@app.route("/", methods=["GET"])
def home():
    return "Servidor do WhatsApp com ChatGPT rodando!"

@app.route("/whatsapp", methods=["POST"])
def whatsapp_reply():
    try:
        msg_in = request.values.get("Body", "").strip().lower()
        sender = request.values.get("From", "")

        print(f"Mensagem recebida de {sender}: {msg_in}")

        # **Identifica√ß√£o autom√°tica do atendimento**
        if "plano" in msg_in or "valor" in msg_in:
            reply = "Temos os seguintes planos dispon√≠veis:\n\nüíª 300MB - R$ 99,90/m√™s\nüöÄ 500MB - R$ 129,90/m√™s\nüîµ 1GB - R$ 199,90/m√™s\n\nSe precisar de mais informa√ß√µes, me avise!"
        
        elif "sem sinal" in msg_in or "problema t√©cnico" in msg_in or "internet caiu" in msg_in:
            reply = "Sinto muito pelo problema! Vamos tentar resolver:\n1Ô∏è‚É£ Verifique se o cabo de fibra est√° conectado corretamente ao modem.\n2Ô∏è‚É£ Desligue o modem por 10 segundos e ligue novamente.\n3Ô∏è‚É£ Verifique se a luz do equipamento est√° vermelha.\n\nSe o problema continuar, posso encaminhar para nosso suporte t√©cnico. Voc√™ pode me informar o seu CPF ou n√∫mero do contrato?"
        
        elif "luz vermelha" in msg_in:
            reply = "A luz vermelha no modem indica falha na conex√£o com a rede. Tente:\nüîπ Verificar se todos os cabos est√£o bem conectados.\nüîπ Reiniciar o modem e aguardar 2 minutos.\nSe a luz permanecer vermelha, me passe o seu CPF para que eu possa abrir um chamado no suporte t√©cnico."

        elif "quem √© voc√™" in msg_in or "quem est√° falando" in msg_in:
            reply = "Ol√°! Sou o assistente virtual da BPG Telecom. Estou aqui para te ajudar com informa√ß√µes sobre planos, suporte t√©cnico e atendimento ao cliente. Como posso te ajudar hoje?"

        elif any(palavra in msg_in for palavra in PALAVRAS_CRITICAS):
            reply = "Sinto muito que voc√™ esteja insatisfeito. Vou encaminhar voc√™ para um de nossos atendentes humanos. Aguarde um momento, por favor."
            # Aqui poderia enviar uma notifica√ß√£o para o time de suporte humano.

        else:
            # **Envia a mensagem para o ChatGPT**
            chat_response = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=[
                    {"role": "system", "content": "Voc√™ √© um assistente virtual da BPG Telecom. Responda sempre de forma clara e objetiva sobre planos, suporte t√©cnico e atendimento ao cliente."},
                    {"role": "user", "content": msg_in}
                ]
            )
            
            reply = chat_response["choices"][0]["message"]["content"]

        # **Envia a resposta para o WhatsApp**
        message = twilio_client.messages.create(
            from_=TWILIO_WHATSAPP_NUMBER,
            body=reply,
            to=sender
        )

        print(f"Mensagem enviada para {sender}: {message.sid}")

        return "OK", 200

    except Exception as e:
        print(f"Erro no endpoint /whatsapp: {str(e)}")
        return f"Erro interno: {str(e)}", 500

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000, debug=True)
